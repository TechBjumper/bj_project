name: Build and Push to ECR

on:
  push:
    branches: [master]
  workflow_dispatch: # Allows to run manually

permissions:
  contents: read

env:
  AWS_REGION: us-east-2
  ECR_REPOSITORY: formacion3junio/r2
  IMAGE_TAG: latest
  S3_BUCKET: formacion3junio-r2

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials (static access keys)
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG backend
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'yarn'
        cache-dependency-path: frontend/yarn.lock

    - name: Build frontend statics and push to S3
      run: |
        cd frontend
        yarn install --frozen-lockfile
        yarn build
        aws s3 sync build/ s3://${{ env.S3_BUCKET }}/ --delete
        aws s3 cp s3://${{ env.S3_BUCKET }}/index.html s3://${{ env.S3_BUCKET }}/index.html --metadata-directive REPLACE --cache-control "no-cache"
